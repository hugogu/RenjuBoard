<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:RenjuBoard.ViewModels"
                    xmlns:interaction="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:control="clr-namespace:RenjuBoard.Controls"
                    xmlns:converter="clr-namespace:RenjuBoard.Converters"
                    xmlns:renju="clr-namespace:Renju.Core;assembly=Renju.Core">
    <converter:WithOffsetConverter x:Key="WithOffsetConverter" />
    <converter:NumberToMarginConverter x:Key="NumberToMarginConverter" />

    <DataTemplate DataType="{x:Type renju:PieceLine}">
        <Viewbox IsHitTestVisible="False"
                 UseLayoutRounding="False"
                 TextOptions.TextFormattingMode="Ideal">
            <Grid>
                <Line X1="{Binding StartPosition.X, Converter={StaticResource WithOffsetConverter}, ConverterParameter=0.5}"
                      Y1="{Binding StartPosition.Y, Converter={StaticResource WithOffsetConverter}, ConverterParameter=0.5}"
                      X2="{Binding EndPosition.X, Converter={StaticResource WithOffsetConverter}, ConverterParameter=0.5}"
                      Y2="{Binding EndPosition.Y, Converter={StaticResource WithOffsetConverter}, ConverterParameter=0.5}"
                      Width="{Binding Board.Size}"
                      Height="{Binding Board.Size}"
                      StrokeThickness="0.1"
                      Stroke="#AAFF0000" />
                <TextBlock FontSize="0.5pt"
                           Foreground="#AA0000FF"
                           Text="{Binding Weight}">
                    <TextBlock.Margin>
                        <MultiBinding Converter="{StaticResource NumberToMarginConverter}">
                            <Binding Path="MiddlePosition.X" Converter="{StaticResource WithOffsetConverter}" ConverterParameter="0.2" />
                            <Binding Path="MiddlePosition.Y" Converter="{StaticResource WithOffsetConverter}" ConverterParameter="0.2" />
                        </MultiBinding>
                    </TextBlock.Margin>
                </TextBlock>
            </Grid>
        </Viewbox>
    </DataTemplate>
    <DataTemplate x:Key="ResolvingPointTemplate"
                  DataType="{x:Type renju:BoardPoint}">
        <control:BoardPiece x:Name="drop"
                            Background="Transparent"
                            SequenceNumber="{Binding Index}"
                            Weight="{Binding Weight}">
        </control:BoardPiece>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Status}" Value="{x:Static renju:Side.Black}">
                <Setter TargetName="drop" Property="Background" Value="#77000000" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}" Value="{x:Static renju:Side.White}">
                <Setter TargetName="drop" Property="Background" Value="#77FFFFFF" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate DataType="{x:Type renju:BoardPoint}">
        <control:BoardPiece x:Name="drop"
                            Background="Transparent"
                            SequenceNumber="{Binding Index}"
                            Weight="{Binding Weight}">
            <interaction:Interaction.Triggers>
                <interaction:EventTrigger EventName="MouseUp">
                    <interaction:InvokeCommandAction Command="{Binding DataContext.DropPointCommand, RelativeSource={RelativeSource AncestorType={x:Type control:GameBoardPanel}}}"
                                                     CommandParameter="{Binding}"/>
                </interaction:EventTrigger>
                <interaction:EventTrigger EventName="MouseEnter">
                    <interaction:InvokeCommandAction Command="{Binding DataContext.PreviewLinesCommand, RelativeSource={RelativeSource AncestorType={x:Type control:GameBoardPanel}}}"
                                                     CommandParameter="{Binding}"/>
                </interaction:EventTrigger>
            </interaction:Interaction.Triggers>
        </control:BoardPiece>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Status}" Value="{x:Static renju:Side.Black}">
                <Setter TargetName="drop" Property="Background" Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}" Value="{x:Static renju:Side.White}">
                <Setter TargetName="drop" Property="Background" Value="Gray" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="LogItemDataTemplate">
        <TextBlock Text="{Binding}"
                   TextWrapping="Wrap" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:LogsViewModel}">
        <DockPanel Grid.Column="3">
            <ToolBar DockPanel.Dock="Top">
                <Button Content="Clear" Command="{Binding ClearLogsCommand}" />
                <TextBox Width="100"
                         Margin="5,0"
                         Text="{Binding SearchKeyword, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="F3"
                                    Command="{Binding SearchCommand}"
                                    CommandParameter="{Binding ElementName=logBox}" />
                    </TextBox.InputBindings>
                </TextBox>
                <Button Content="Search"
                        Command="{Binding SearchCommand}"
                        CommandParameter="{Binding ElementName=logBox}" />
            </ToolBar>
            <TextBox x:Name="logBox"
                     Text="{Binding LogText}"
                     IsReadOnly="True"
                     IsReadOnlyCaretVisible="True"
                     BorderThickness="0"
                     TextWrapping="Wrap" />
        </DockPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:OptionsViewModel}">
        <DockPanel Margin="12">
            <DockPanel DockPanel.Dock="Bottom"
                       LastChildFill="False"
                       Margin="0,12,0,0">
                <Button Content="Cancel"
                        IsCancel="True"
                        DockPanel.Dock="Right"
                        Command="{Binding CancelCommand}" />
                <Button Content="Save"
                        IsDefault="True"
                        Margin="0,0,5,0"
                        DockPanel.Dock="Right"
                        Command="{Binding SaveCommand}" />
            </DockPanel>
            <TabControl>
                <TabItem Header="UI">
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <CheckBox Content="Show preview line"
                                  IsChecked="{Binding ShowPreviewLine}" />
                        <CheckBox Content="Show board lines"
                                  Grid.Row="1"
                                  IsChecked="{Binding ShowLinesOnBoard}" />
                        <CheckBox Content="Show AI resolving steps"
                                  Grid.Row="2"
                                  IsChecked="{Binding ShowAISteps}" />
                        <CheckBox Content="Show calibration labels"
                                  Grid.Row="3"
                                  IsChecked="{Binding ShowCalibrationLabels}" />
                    </Grid>
                </TabItem>
                <TabItem Header="AI">
                    <StackPanel Margin="5">
                        <GroupBox Padding="0,5,5,5">
                            <GroupBox.Header>
                                <CheckBox Content="Limit AI time"
                                          IsChecked="{Binding IsAITimeLimited}" />
                            </GroupBox.Header>
                            <Grid IsEnabled="{Binding IsAITimeLimited}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="5" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label Content="AI time limit (ms): " />
                                <TextBox Grid.Column="1"
                                         Text="{Binding AITimeLimit}" />
                                <Label Grid.Row="2"
                                       Content="AI step time limit (ms): " />
                                <TextBox Grid.Column="1"
                                         Grid.Row="2"
                                         Text="{Binding AIStepTimeLimit}" />
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </TabItem>
            </TabControl>
        </DockPanel>
    </DataTemplate>
</ResourceDictionary>