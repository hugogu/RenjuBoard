<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:RenjuBoard.ViewModels"
                    xmlns:interaction="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:control="clr-namespace:Renju.Controls;assembly=Renju.Controls"
                    xmlns:converter="clr-namespace:Renju.Controls.Converters;assembly=Renju.Controls"
                    xmlns:renju="clr-namespace:Renju.Core;assembly=Renju.Core"
                    xmlns:model="clr-namespace:Renju.Infrastructure.Model;assembly=Renju.Infrastructure"
                    xmlns:base="clr-namespace:Renju.Infrastructure.ViewModel;assembly=Renju.Infrastructure"
                    xmlns:main="clr-namespace:RenjuBoard">
    <converter:WithOffsetConverter x:Key="WithOffsetConverter" />
    <converter:NumberToMarginConverter x:Key="NumberToMarginConverter" />

    <DataTemplate DataType="{x:Type model:PieceLine}">
        <Viewbox IsHitTestVisible="False"
                 UseLayoutRounding="False"
                 TextOptions.TextFormattingMode="Ideal">
            <Grid>
                <Line X1="{Binding StartPosition.X, Converter={StaticResource WithOffsetConverter}, ConverterParameter=0.5}"
                      Y1="{Binding StartPosition.Y, Converter={StaticResource WithOffsetConverter}, ConverterParameter=0.5}"
                      X2="{Binding EndPosition.X, Converter={StaticResource WithOffsetConverter}, ConverterParameter=0.5}"
                      Y2="{Binding EndPosition.Y, Converter={StaticResource WithOffsetConverter}, ConverterParameter=0.5}"
                      Width="{Binding Board.Size}"
                      Height="{Binding Board.Size}"
                      StrokeThickness="0.1"
                      Stroke="#AAFF0000" />
                <TextBlock FontSize="0.5pt"
                           Foreground="#AA0000FF"
                           Text="{Binding Weight}">
                    <TextBlock.Margin>
                        <MultiBinding Converter="{StaticResource NumberToMarginConverter}">
                            <Binding Path="MiddlePosition.X" Converter="{StaticResource WithOffsetConverter}" ConverterParameter="0.2" />
                            <Binding Path="MiddlePosition.Y" Converter="{StaticResource WithOffsetConverter}" ConverterParameter="0.2" />
                        </MultiBinding>
                    </TextBlock.Margin>
                </TextBlock>
            </Grid>
        </Viewbox>
    </DataTemplate>
    <DataTemplate x:Key="ResolvingPointTemplate"
                  DataType="{x:Type renju:BoardPoint}">
        <control:BoardPiece x:Name="drop"
                            Background="Transparent"
                            SequenceNumber="{Binding Index}"
                            Weight="{Binding Weight}">
        </control:BoardPiece>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Status}" Value="{x:Static model:Side.Black}">
                <Setter TargetName="drop" Property="Background" Value="#77000000" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}" Value="{x:Static model:Side.White}">
                <Setter TargetName="drop" Property="Background" Value="#77FFFFFF" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate DataType="{x:Type renju:BoardPoint}">
        <control:BoardPiece x:Name="drop"
                            Background="Transparent"
                            SequenceNumber="{Binding Index}"
                            Weight="{Binding Weight}">
            <interaction:Interaction.Triggers>
                <interaction:EventTrigger EventName="MouseUp">
                    <interaction:InvokeCommandAction Command="{Binding DataContext.DropPointCommand, RelativeSource={RelativeSource AncestorType={x:Type control:GameBoardPanel}}}"
                                                     CommandParameter="{Binding}"/>
                </interaction:EventTrigger>
                <interaction:EventTrigger EventName="MouseEnter">
                    <interaction:InvokeCommandAction Command="{Binding DataContext.AIControllerVM.PreviewLinesCommand, RelativeSource={RelativeSource AncestorType={x:Type control:GameBoardPanel}}}"
                                                     CommandParameter="{Binding}"/>
                </interaction:EventTrigger>
            </interaction:Interaction.Triggers>
        </control:BoardPiece>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Status}" Value="{x:Static model:Side.Black}">
                <Setter TargetName="drop" Property="Background" Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}" Value="{x:Static model:Side.White}">
                <Setter TargetName="drop" Property="Background" Value="Gray" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="LogItemDataTemplate">
        <TextBlock Text="{Binding}"
                   TextWrapping="Wrap" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:LogsViewModel}">
        <DockPanel Grid.Column="3">
            <ToolBar DockPanel.Dock="Top">
                <Button Command="{Binding ClearLogsCommand}">
                    <Image Source="../Images/Clean.png" Stretch="None" />
                </Button>
                <TextBox Width="100"
                         Margin="5,0"
                         Text="{Binding SearchKeyword, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="F3"
                                    Command="{Binding SearchCommand}"
                                    CommandParameter="{Binding ElementName=logBox}" />
                    </TextBox.InputBindings>
                </TextBox>
                <Button Command="{Binding SearchCommand}"
                        CommandParameter="{Binding ElementName=logBox}">
                    <Image Source="../Images/Search.png" Stretch="None" />
                </Button>
            </ToolBar>
            <TextBox x:Name="logBox"
                     Text="{Binding LogText}"
                     IsReadOnly="True"
                     IsReadOnlyCaretVisible="True"
                     BorderThickness="0"
                     TextWrapping="Wrap"
                     ScrollViewer.VerticalScrollBarVisibility="Auto" />
        </DockPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:OptionsViewModel}">
        <DockPanel Margin="12">
            <DockPanel DockPanel.Dock="Bottom"
                       LastChildFill="False"
                       Margin="0,12,0,0">
                <Button Content="Cancel"
                        IsCancel="True"
                        DockPanel.Dock="Right"
                        Command="{Binding CancelCommand}" />
                <Button Content="Save"
                        IsDefault="True"
                        Margin="0,0,5,0"
                        DockPanel.Dock="Right"
                        Command="{Binding SaveCommand}" />
            </DockPanel>
            <TabControl DataContext="{Binding Options}">
                <TabItem Header="UI">
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <CheckBox Content="Show preview line"
                                  IsChecked="{Binding ShowPreviewLine}" />
                        <CheckBox Content="Show board lines"
                                  Grid.Row="1"
                                  IsChecked="{Binding ShowLinesOnBoard}" />
                        <CheckBox Content="Show AI resolving steps"
                                  Grid.Row="2"
                                  IsChecked="{Binding ShowAISteps}" />
                        <CheckBox Content="Show calibration labels"
                                  Grid.Row="3"
                                  IsChecked="{Binding ShowCalibrationLabels}" />
                    </Grid>
                </TabItem>
                <TabItem Header="AI">
                    <StackPanel Margin="5">
                        <GroupBox Padding="0,5,5,5">
                            <GroupBox.Header>
                                <CheckBox Content="Limit AI time"
                                          IsChecked="{Binding IsAITimeLimited}" />
                            </GroupBox.Header>
                            <Grid IsEnabled="{Binding IsAITimeLimited}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="5" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label Content="AI time limit (ms): " />
                                <TextBox Grid.Column="1"
                                         Text="{Binding AITimeLimit}" />
                                <Label Grid.Row="2"
                                       Content="AI step time limit (ms): " />
                                <TextBox Grid.Column="1"
                                         Grid.Row="2"
                                         Text="{Binding AIStepTimeLimit}" />
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </TabItem>
            </TabControl>
        </DockPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type main:MainWindowViewModel}">
        <DataTemplate.Resources>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Margin" Value="0,5,0,0" />
            </Style>
        </DataTemplate.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="380" />
            </Grid.ColumnDefinitions>
            <DockPanel>
                <StackPanel DataContext="{Binding TimingVM}"
                            DockPanel.Dock="Bottom"
                            Margin="5">
                    <TextBlock Text="Black" FontWeight="Black" />
                    <TextBlock>
                    Used time: <Run Text="{Binding BlackTime, Mode=OneWay, StringFormat=\{0:hh\\:mm\\:ss\}}" />
                    </TextBlock>
                    <Separator />
                    <TextBlock Text="White" FontWeight="Black" />
                    <TextBlock>
                    Used time: <Run Text="{Binding WhiteTime, Mode=OneWay, StringFormat={}{0:hh}:{0:mm}:{0:ss}}"/>
                    </TextBlock>
                </StackPanel>
                <StackPanel Margin="5">
                    <control:ImageButton Content="New Game"
                                         Command="{Binding NewGameCommand}"
                                         Source="../Images/NewGame.png" />
                    <control:ImageButton Content="Undo"
                                         Source="../Images/Undo.png"
                                         Command="{Binding BoardRecorder.UndoCommand}" />
                    <control:ImageButton Content="Redo"
                                         Source="../Images/Redo.png"
                                         Command="{Binding BoardRecorder.RedoCommand}" />
                    <Separator Margin="0,5,0,0" />
                    <control:ImageButton Content="Save..."
                                         Source="../Images/Save.png"
                                         Command="{Binding SaveLoadVM.SaveCommand}" />
                    <control:ImageButton Content="Load..."
                                         Source="../Images/Open.png"
                                         Command="{Binding SaveLoadVM.LoadCommand}" />
                    <Separator Margin="0,5,0,0" />
                    <control:ImageButton Content="Options"
                                         Source="../Images/UserProfile.png"
                                         Command="{Binding OptionsVM.ShowOptionsCommand}" />
                    <CheckBox Content="AI first" IsChecked="{Binding OptionsVM.Options.AIFirst}" />
                </StackPanel>
            </DockPanel>
            <DockPanel Grid.Column="1">
                <ToolBar DockPanel.Dock="Top"
                         DataContext="{Binding AIControllerVM}">
                    <Button Command="{Binding PauseAICommand}">
                        <Image Source="../Images/Pause.png" />
                    </Button>
                    <Button Command="{Binding ContinueAICommand}">
                        <Image Source="../Images/Run.png" />
                    </Button>
                    <Button Command="{Binding NextAIStepComand}">
                        <Image Source="../Images/Next.png" />
                    </Button>
                    <Separator />
                    <ToggleButton IsChecked="{Binding Options.SteppingAI}">
                        <Image Source="../Images/RunPause.png" />
                    </ToggleButton>
                </ToolBar>
                <control:GameBoardPanel ItemsSource="{Binding GameBoard.Points}"
                                        Lines="{Binding GameBoard.Lines}"
                                        PreviewLines="{Binding AIControllerVM.PreviewLines}"
                                        ResolvingPoints="{Binding AIControllerVM.ResolvingPoints}"
                                        ShowCalibrationLabels="{Binding OptionsVM.Options.ShowCalibrationLabels}"
                                        Size="{Binding GameBoard.Size}">
                    <interaction:Interaction.Triggers>
                        <interaction:EventTrigger EventName="MouseLeave">
                            <interaction:InvokeCommandAction Command="{Binding AIControllerVM.ClearPreviewLinesCommand}" />
                        </interaction:EventTrigger>
                    </interaction:Interaction.Triggers>
                </control:GameBoardPanel>
            </DockPanel>
            <GridSplitter Grid.Column="2"
                          Width="5"
                          HorizontalAlignment="Stretch" />
            <ContentControl Grid.Column="3"
                            Content="{Binding}"
                            base:VMInfo.DataType="{x:Type vm:LogsViewModel}" />
        </Grid>
    </DataTemplate>
</ResourceDictionary>